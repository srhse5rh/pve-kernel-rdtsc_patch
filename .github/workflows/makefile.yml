name: Makefile CI
on:
  push:
  workflow_dispatch:
    inputs:
      commitid:
        description: "commitid"
        required: false
        type: string
      debianversion:
        description: "debianversion"
        required: false
        type: string

env:
  commitid: f2f95eff685bff00a1dd3f74b78556a592c1649f
  debianversion: bookworm

jobs:
  build:

    runs-on: ubuntu-latest
    # container:
    #   image: debian:bookworm
    # defaults:
    #   run:
    #     shell: bash

    steps:
      - name: set env
        run: |
          if [ ! '${{ inputs.commitid }}' = '' ];
          then
            echo "commitid=${{ inputs.commitid }}" >> "${{ github.env }}"
          fi

      - run: |
          apt update
          apt install git wget curl -y
          echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" > /etc/apt/sources.list.d/pve-no-subscription.list
          echo "deb http://download.proxmox.com/debian/devel bookworm main" >> /etc/apt/sources.list
          wget -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg"
          apt update

      - run: |
          git config --global --add safe.directory ${PWD}
          git clone git://git.proxmox.com/git/pve-kernel.git .
          git reset --hard ${{ env.commitid }}
          # git rev-parse HEAD > hash-main
          git submodule status > hash-submodules

      - uses: actions/cache@v2
        with:
          path: submodules
          key: submodules-${{ hashFiles('hash-submodules') }}

      - run: apt install -y devscripts dh-virtualenv sphinx-common dh-python debhelper equivs openjdk-17-jre libbabeltrace-dev binutils-dev libperl-dev systemtap-sdt-dev libperl-dev

      - run: make build-dir-fresh

      - run: |
          mk-build-deps -it "apt -o Debug::pkgProblemResolver=yes -y" proxmox-kernel-*/debian/control
          mk-build-deps -it "apt -o Debug::pkgProblemResolver=yes -y" proxmox-kernel-*/modules/pkg-zfs/debian/control

      - run: |
          curl -OL https://github.com/srhse5rh/pve-rdtsc-patch-script/raw/master/patch.sh
          chmod +x patch.sh
          ./patch.sh

      - run: make deb

      # - name: Run the build process with Docker
      #   uses: addnab/docker-run-action@v3
      #   with:
      #     image: debian:bookworm
      #     options: -v ${{ github.workspace }}:/build
      #     run: |
      #       echo ---start---
      #       apt update >/dev/null
      #       apt install git wget curl -y >/dev/null
      #       echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" > /etc/apt/sources.list.d/pve-install-repo.list
      #       echo "deb http://download.proxmox.com/debian/devel bookworm main" >> /etc/apt/sources.list
      #       wget -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg "https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg"
      #       apt update >/dev/null
      #       apt install devscripts dh-virtualenv sphinx-common dh-python debhelper equivs -y >/dev/null
      #       cd build
      #       echo ---clone pve-kernel---
      #       git clone git://git.proxmox.com/git/pve-kernel.git
      #       cd pve-kernel
      #       git reset --hard ${{ env.commitid }}
      #       echo ---clone submodules---
      #       make build-dir-fresh >/dev/null
      #       echo ---install deps---
      #       # apt install -y dh-virtualenv sphinx-common dh-python debhelper equivs >/dev/null
      #       mk-build-deps -it "apt -o Debug::pkgProblemResolver=yes --no-install-recommends -y" proxmox-kernel-*/debian/control >/dev/null
      #       mk-build-deps -it "apt -o Debug::pkgProblemResolver=yes --no-install-recommends -y" proxmox-kernel-*/modules/pkg-zfs/debian/control >/dev/null
      #       echo ---apply patch---
      #       curl -OL https://github.com/srhse5rh/pve-rdtsc-patch-script/raw/master/patch.sh
      #       chmod +x patch.sh && ./patch.sh
      #       echo ---build deb---
      #       make deb

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          path: |
            *.deb
            *.buildinfo
            *.changes
